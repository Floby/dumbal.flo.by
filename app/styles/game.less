
.game.active {
  user-select: none;
  -webkit-tap-highlight-color: transparent; 
  .players {
    overflow-x: auto;
    overflow-y: visible;
    .playerÂ {
      margin-top: 1em;
      padding: 0 1em;
      clear:  both;
      .score {
        float:right;
        font-size: 0.8em;
        min-width: 2em;
        text-align: center;
        display: inline-block;
        background: lightgray;
        border-radius: 0.3em;
        padding: 0.5em;
        color: @secondaryTextColor;
        color: var(--secondary-text-color);
        position: relative;
        transition: .2s ease-out;
      }
      &.is-out {
        .name {
          text-decoration: line-through;
          opacity: 0.5;
        }
        .score {
          background: pink;
        }
        .score-input {
          visibility: hidden;
        }
      }
      .name {
        position: relative;
      }
      &.dumbal .name {
        font-weight: bold;
        color: @darkPrimaryColor;
        color: var(--dark-primary-color);
      }
      a.dumbal-round {
        float: right;
        font-size: 0.8em;
      }

      button.counter {
        float: right;
        font-size: 0.8em;
      }
    }

    .score-input {
      float: right;
      position: relative;
      margin-right: 1em;
      visibility: hidden;
      .round-score {
        width: 2em;
        line-height: 0px;
      }
      .input-sign {
        display: inline-block;
        position: absolute;
        top: -0.2em;
        right: 2.8em;
        border-radius: 1em;
        width: 1em;
        height: 1em;
        text-align: center;
        padding: 0.3em;

        transition: all .2s ease-out, visibility 0ms;
        background: lightgray;
        border: 1px solid black;
        color: white;
        transform: rotateZ(0);
      }

      &.positive {
        .input-sign {
          background: @inAccentColor;
          border-color: @accentColor;
          color: @accentColor;
        }
      }
      &.negative {
        .input-sign {
          background: @accentColor;
          border-color: @accentColor;
          color: @inAccentColor;
          font-weight: bold;
          transform: rotateZ(-360deg);
        }
      }
    }

    &.round {
      .score-input {
        visibility: visible;
      }
    }
  }

  .dumbal-action {
    margin: 2em 1em;
    clear: both;
    text-align: center;
  }
  .misc-action {
    .dumbal-action();
    text-align: right;
    button, a.button {
      transition: background-color 200ms ease-out;
      font-size: 0.6em;
      background-color: desaturate(lighten(@accentColor, 10%), 60%);
      background-color: var(--faded-accent-color);
      &[disabled] {
        .disabled-button();
      }
    }
  }

  &.over {
    .player.winner {
      .name {
        font-weight: bold;
        color: @darkPrimaryColor;
        color: var(--dark-primary-color);
        .winner-icon {
          animation-name: twist-in-with-opacity;
          animation-duration: 1s;
          animation-timing-function: ease-out;
        }
      }
      .score {
        background: white;
        border: 1px solid;
        border-color: @darkPrimaryColor;
        border-color: var(--dark-primary-color);
        padding: calc(0.5em - 1px);
        color: @primaryColor;
        color: var(--primary-color);
      }
    }
  }
}

.game .game-rounds-title {
  padding: 0 1em;
  margin-top: 2em;
  font-size: 0.9em;
  text-decoration: underline;

  .deploy-toggle {
    float: right;
    .fa {
      transition: 400ms ease-out;
    }
  }
  &.hidden .deploy-toggle .fa {
    transform: rotateZ(-180deg);
  }
}

.game-rounds {
  position: relative;
  overflow-y: hidden;

  &::before {
    content: ' ';
    display: block;
    height: 100%;
    width: 1em;
    position: absolute;
    top: 0;
    left: 0;
    background-image: linear-gradient(
      to right,
      white 0%,
      white 20%,
      rgba(0, 0, 0, 0) 100%
    );
  }
  &::after {
    content: ' ';
    display: block;
    height: 100%;
    width: 1em;
    position: absolute;
    top: 0;
    right: 0;
    background-image: linear-gradient(
      to left,
      white 0%,
      white 20%,
      rgba(0, 0, 0, 0) 100%
    );
  }

  .rounds-container {
    overflow-x: auto;
    transition: 400ms ease-out;
    margin-bottom: 0;
  }
  &.hidden .rounds-container {
    margin-bottom: -100%;
  }

  .rounds-container > .rounds {
    text-align: center;
    display: table;
    padding: 1em;
    table {
      font-size: 0.7em;
      th {
        //font-weight: bold;
        color: @darkPrimaryColor;
        color: var(--dark-primary-color);
      }
      th:first-child {
        border-right: 1px solid #666
      }
      thead {
        border-bottom: 1px solid #666;
        th {
          padding: 0.5em 1em;
        }
      }
      tbody {
        tr {
          //border-bottom: 1px solid #ddd;
          &:nth-child(even) {
            background-color: @lighterPrimaryColor;
            background-color: var(--lighter-primary-color);
          }
          td {
            padding: 0.5em;
          }
        }
      }
    }
  }
}

@keyframes twist-in-with-opacity {
  0% {
    opacity: 0;
    transform: rotateZ(-720deg);
  }
  50% {
    opacity: 0.2;
  }
  100% {
    opacity: 1;
    transform: rotateZ(0deg);
  }
}


.dealer-mark {
  font-size: .7em;
  display: inline-block;
  letter-spacing: 0;
  word-spacing: -0.8em;
  .outer {
    display: inline-block;
    background-color: white;
    //position: relative;
    opacity: 0;
    transform: translate3d(4em, 0, 0);
    animation: fade-in-from-right 2s ease-in;
    animation-fill-mode: forwards;
    animation-iteration-count: 10;
    & > span {
      display: inline-block;
      transform: rotate(-10deg)
    }
  }

  .outer + .outer {
    animation-delay: 200ms;
    & > span {
      transform: rotate(0)
    }
  }
  .outer + .outer + .outer {
    animation-delay: 400ms;
    & > span {
      transform: rotate(10deg)
    }
  }

  @keyframes fade-in-from-right {
    0% {
      opacity: 0;
      transform: translate3d(4em, 0, 0);
    }
    10% {
      opacity: 0.2;
    }
    15% {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
    100% {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }
}
